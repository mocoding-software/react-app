trigger:
  branches:
    include:
      - master
  tags:
    include:
      - v*

variables:
  eslintConfig: "eslint-config"
  reactApp: "react-app"
  reactAppBasic: "react-app-basic"
  reactAppCommon: "react-app-common"
  reactAppRouterRedux: "react-app-router-redux"
  reactAppRouterReduxAsync: "react-app-router-redux-async"

stages:
  - stage: Build
    pool:
      vmImage: "ubuntu-18.04"
    jobs:
      - job: Package
        steps:
          - task: UseGitVersion@5
            displayName: "Git Version"
            inputs:
              versionSpec: "5.0.0"
              useConfigFile: true
              configFilePath: "$(Build.SourcesDirectory)/GitVersion.yml"
          - task: Yarn@3
            displayName: "Install"
            inputs:
              ProjectDirectory: $(Build.SourcesDirectory)
          - template: pack-as-is-template.yml
            parameters:
              packages: $(eslintConfig)
          - template: build-and-pack-template.yml
            parameters:
              packages: $(reactApp)
          - template: pack-as-is-template.yml
            parameters:
              packages: $(reactAppBasic)
          - template: pack-as-is-template.yml
            parameters:
              packages: $(reactAppCommon)
          - template: pack-as-is-template.yml
            parameters:
              packages: $(reactAppRouterRedux)
          - template: pack-as-is-template.yml
            parameters:
              packages: $(reactAppRouterReduxAsync)
  # - stage: Deploy
  #   dependsOn: Build
  #   condition: and(succeeded(), contains(variables['Build.Reason'], 'PullRequest'))
  #   pool:
  #     vmImage: "ubuntu-18.04"
  #   jobs:
  #     - deployment: DevBuild
  #       environment: "dev-builds"
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - task: Npm@1
  #                 displayName: "Publish to npm (dev-builds)"
  #                 inputs:
  #                   command: "custom"
  #                   customCommand: "publish $(Pipeline.Workspace)/npm/${Build.DefinitionName}-${Build.BuilderNumber}.tgz"
  #                   customRegistry: "useFeed"
  #                   customFeed: "da7703d4-fb22-4933-b869-83f4264b7b84/e1336e71-3540-4a0c-830c-639112685b07"
  # - stage: Release
  #   dependsOn: Build
  #   condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags/v'))
  #   pool:
  #     vmImage: "ubuntu-18.04"
  #   jobs:
  #     - deployment: Public
  #       environment: "public"
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - task: Npm@1
  #                 displayName: "Publish"
  #                 inputs:
  #                   command: "custom"
  #                   customCommand: "publish $(Pipeline.Workspace)/npm/${Build.DefinitionName}-${Build.BuilderNumber}.tgz"
  #                   customEndpoint: "public-npm"
  #               - task: GitHubRelease@1
  #                 displayName: "Update GitHub release"
  #                 inputs:
  #                   gitHubConnection: "mocoding-software"
  #                   repositoryName: "mocoding-software/webpack-typescript-builder"
  #                   action: edit
  #                   tag: "v$(Build.BuildNumber)"
  #                   assets: "$(Pipeline.Workspace)/npm/${Build.DefinitionName}-${Build.BuilderNumber}.tgz"
  #                   assetUploadMode: replace
